os:
  - Visual Studio 2017

build:
  verbosity: detailed

environment:
  matrix:
    - builder: cmake
      PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.3"
      PYTHON_ARCH: "64"
      PIP: "C:\\Python36-x64\\Scripts\\pip"

    - builder: scons

init:
  - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64

install:
  - SET "PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - if "%builder%" == "scons" (
       python --version &
       python -m ensurepip &
       pip install -U setuptools &
       pip install -U wheel &
       pip install scons==2.4.1
    )
  - cinst nsis.portable
  - git clone https://gitlab.com/libeigen/eigen.git external\eigen3
  - cd external\eigen3
  - mkdir build & cd build
  - cmake .. -DCMAKE_INSTALL_PREFIX="..\..\build" -DCMAKE_BUILD_TYPE=Release -G "NMake Makefiles"
  - nmake /NOLOGO install
  - cd ..\..\..\

before_build:
  # BOOST Python require x86 compilation
  #- call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64
  #- call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86

# Build script
#
build_script:
   # Build first time
  - git submodule init
  - git submodule update

  ## Build externals

  # SCons: First we need to build ALTA to get Eigen
  - if "%builder%" == "scons" (
       scons --cfg=./configs/scons/config-windows-appveyor.py &
       appveyor PushArtifact config.log
    )

  # Install CERES
  - cd external
  - git clone https://ceres-solver.googlesource.com/ceres-solver
  - cd ceres-solver
  - mkdir build-ceres
  - cd build-ceres
  - cmake .. -DBUILD_SHARED_LIBS=OFF -DMINIGLOG=ON -DBUILD_TESTING=OFF -DBUILD_EXAMPLES=OFF -DCMAKE_INSTALL_PREFIX="..\..\build" -DEIGEN_INCLUDE_DIR="..\..\build\include" -DCMAKE_BUILD_TYPE=Release -G "NMake Makefiles"
  - nmake /NOLOGO install
  - cd ..\..\..

  # Install NLOPT
  - cd external
  - git clone git://github.com/stevengj/nlopt
  - cd nlopt
  - mkdir build
  - cd build
  - cmake .. -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX="..\..\build" -DCMAKE_BUILD_TYPE=Release -G "NMake Makefiles"
  - nmake /NOLOGO install
  - cd ..\..\..

  # Rebuild with CERES and Python
  - if "%builder%" == "scons" (
      scons --cfg=./configs/scons/config-windows-appveyor.py &
      appveyor PushArtifact config.log
    ) else (
      mkdir build &
      cd build &
      cmake .. -DPython_Version="3.6" -DEIGEN3_INCLUDE_DIR="external/build/include/eigen3" -DCeres_DIR="external/build/CMake" -DNLOPT_INCLUDE_DIRS="../external/build/include" -DNLOPT_LIBRARIES="../external/build/lib/nlopt.lib" -Wdev -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON  -DCMAKE_BUILD_TYPE=Release -G "NMake Makefiles" &
      nmake /NOLOGO &
      cd ..
    )

  # Generate zip with all compilation elements
  # TODO: This export is not working
  #- appveyor PushArtifact 'build/*'

  # Generate product
  - makensis sources\scripts\installer.nsi
  - appveyor PushArtifact sources\scripts\ALTA.exe


# Perform custom tests
#
test_script:
  - ./setpath.bat
  - if "%builder%" == "scons" (
      scons --cfg=./configs/scons/config-windows-appveyor.py tests
      appveoyr PushArtifact build\sources\tests\*.log
    ) else (
      cd build &
      nmake test &
      appveyor PushArtifact Testing\Temporary\LastTest.log &
      cd ..
    )


# Outputed files
#
artifacts:
   - path: sources\scripts\ALTA.exe
     name: ALTA
   - path: config.log
     name: SconsLog
   - path: 'build\sources\tests\*.log'
     name: SConsTestsLog
     type: zip
   - path: build\Testing\Temporary\LastTest.log
     name: CMakeTestsLog
  #  - path: 'build/*'
  #    name: ALTAZip
  #    type: zip
