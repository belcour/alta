# ALTA --- Analysis of Bidirectional Reflectance Distribution Functions
#
# Copyright (C) 2014, 2015 CNRS
# Copyright (C) 2013, 2014, 2015, 2016 Inria
# Copyright (C) 2015 Universite de Montreal
#
# This file is part of ALTA.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0.  If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

import os
import shutil
import SCons.SConf as C

Import('env', 'CheckPKG', 'library_available')

on_windows = os.name == 'nt'

if env.GetOption('clean'):
   print("Removing all the third party packages")

   # Removing the output build directory
   #shutil.rmtree('build', True)

   # Removing the TP directories
   #shutil.rmtree('eigen-eigen-ffa86ffb5570', True)

else:
   ##
   #   Eigen dependency
   ##
   conf = Configure(env, custom_tests = { 'CheckPKG' : CheckPKG })
   if conf.CheckPKG('eigen3'):
     env.ParseConfig('pkg-config --cflags --libs eigen3')
   if not conf.CheckCXXHeader('Eigen/Core'):
     execfile('obtain_eigen.py')

     # Let other parts of the build system know that we use our own Eigen.
     env['EIGEN_INC'] = [Dir('#external/build/include').abspath]
   env = conf.Finish()

##
#   QuadProg++
#   TODO: Change to the QuadProg v2 code
##
qp_dir     = 'quadprog++'
qp_target  = 'build' + os.sep + 'lib' + os.sep + qp_dir
qp_base    = qp_dir + os.sep
qp_sources = [qp_base + 'QuadProg++.cc']
# BY DEFAULT WE PROPAGATE THE Scons environment from the main SConscript file
qp_ccflags = env['CCFLAGS']

if env['CC'] != 'cl':
  # We're not building a real static library, but rather what Libtool
  # calls a "convenience library": an archive that contains PIC code.
  # Thus, force '-fPIC'.
  qp_ccflags += ' -fPIC'

env.StaticLibrary(target = qp_target, source = qp_sources,
                  CCFLAGS = qp_ccflags,
                  CPPPATH = env['CPPPATH'] + ['build' + os.sep + 'include'])
